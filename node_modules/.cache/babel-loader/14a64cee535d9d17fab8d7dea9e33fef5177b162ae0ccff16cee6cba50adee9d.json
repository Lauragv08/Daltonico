{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\A01-1-0605-02\\\\Downloads\\\\project\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport RoomLayout from './components/RoomLayout';\nimport OutcomeScreen from './components/OutcomeScreen';\nimport { initialScenario, blueDoorScenario, successScenario, errorScenarios } from './mock/scenarios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [currentScenario, setCurrentScenario] = useState(initialScenario);\n  const [path, setPath] = useState([]);\n  const handleSelectDoor = doorColor => {\n    const newPath = [...path, doorColor];\n    setPath(newPath);\n    if (newPath.length === 1) {\n      if (newPath[0] === 'red') {\n        setCurrentScenario(errorScenarios.initialRedDoor);\n      } else if (newPath[0] === 'blue') {\n        setCurrentScenario(blueDoorScenario);\n      } else if (newPath[0] === 'green') {\n        setCurrentScenario({\n          ...blueDoorScenario,\n          description: \"Has tomado un atajo. Elige cuidadosamente.\",\n          doors: [{\n            color: \"blue\",\n            label: \"Puerta Azul\",\n            disabled: false\n          }, {\n            color: \"red\",\n            label: \"Puerta Roja\",\n            warning: \"No cruce por la roja\",\n            disabled: false\n          }, {\n            color: \"black\",\n            label: \"Puerta Negra\",\n            disabled: false\n          }]\n        });\n      }\n    } else if (newPath.length === 2) {\n      if (newPath[0] === 'blue') {\n        setCurrentScenario({\n          ...blueDoorScenario,\n          description: \"Un cartel dice: 'Elige la puerta roja' pero no hay roja...\",\n          doors: [{\n            color: \"purple\",\n            label: \"Puerta Blanca\",\n            disabled: false\n          }, {\n            color: \"black\",\n            label: \"Puerta Negra\",\n            disabled: false\n          }, {\n            color: \"green\",\n            label: \"Puerta Verde\",\n            disabled: false\n          }]\n        });\n      } else if (newPath[0] === 'green') {\n        setCurrentScenario(successScenario);\n      } else if (newPath[1] === 'black') {\n        setCurrentScenario(errorScenarios.noExit);\n      } else if (newPath[1] === 'red') {\n        setCurrentScenario({\n          isSuccess: false,\n          title: \"Error\",\n          message: \"No lograste encontrar la salida\"\n        });\n      }\n    } else if (newPath.length === 3 && newPath[2] === 'green') {\n      setCurrentScenario(successScenario);\n    } else {\n      setCurrentScenario(errorScenarios.wrongPath);\n    }\n  };\n  const resetGame = () => {\n    setCurrentScenario(initialScenario);\n    setPath([]);\n  };\n  if (currentScenario.isSuccess !== undefined) {\n    return /*#__PURE__*/_jsxDEV(OutcomeScreen, {\n      ...currentScenario\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 12\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(RoomLayout, {\n    title: currentScenario.title,\n    description: currentScenario.description,\n    doors: currentScenario.doors,\n    onSelectDoor: handleSelectDoor\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"lS6i8COqnbnZHOSykiQORR9qt84=\");\n_c = App;\nexport default App;\n\n// DONE\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","RoomLayout","OutcomeScreen","initialScenario","blueDoorScenario","successScenario","errorScenarios","jsxDEV","_jsxDEV","App","_s","currentScenario","setCurrentScenario","path","setPath","handleSelectDoor","doorColor","newPath","length","initialRedDoor","description","doors","color","label","disabled","warning","noExit","isSuccess","title","message","wrongPath","resetGame","undefined","fileName","_jsxFileName","lineNumber","columnNumber","onSelectDoor","_c","$RefreshReg$"],"sources":["C:/Users/A01-1-0605-02/Downloads/project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\nimport RoomLayout from './components/RoomLayout';\nimport OutcomeScreen from './components/OutcomeScreen';\nimport { initialScenario, blueDoorScenario, successScenario, errorScenarios } from './mock/scenarios';\n\nconst App = () => {\n  const [currentScenario, setCurrentScenario] = useState(initialScenario);\n  const [path, setPath] = useState([]);\n\n  const handleSelectDoor = (doorColor) => {\n    const newPath = [...path, doorColor];\n    setPath(newPath);\n\n    if (newPath.length === 1) {\n      if (newPath[0] === 'red') {\n        setCurrentScenario(errorScenarios.initialRedDoor);\n      } else if (newPath[0] === 'blue') {\n        setCurrentScenario(blueDoorScenario);\n      } else if (newPath[0] === 'green') {\n        setCurrentScenario({\n          ...blueDoorScenario,\n          description: \"Has tomado un atajo. Elige cuidadosamente.\",\n          doors: [\n            { color: \"blue\", label: \"Puerta Azul\", disabled: false },\n            { color: \"red\", label: \"Puerta Roja\", warning: \"No cruce por la roja\", disabled: false },\n            { color: \"black\", label: \"Puerta Negra\", disabled: false }\n          ]\n        });\n      }\n    } else if (newPath.length === 2) {\n      if (newPath[0] === 'blue') {\n        setCurrentScenario({\n          ...blueDoorScenario,\n          description: \"Un cartel dice: 'Elige la puerta roja' pero no hay roja...\",\n          doors: [\n            { color: \"purple\", label: \"Puerta Blanca\", disabled: false },\n            { color: \"black\", label: \"Puerta Negra\", disabled: false },\n            { color: \"green\", label: \"Puerta Verde\", disabled: false }\n          ]\n        });\n      } else if (newPath[0] === 'green') {\n        setCurrentScenario(successScenario);\n      } else if (newPath[1] === 'black') {\n        setCurrentScenario(errorScenarios.noExit);\n      } else if (newPath[1] === 'red') {\n        setCurrentScenario({\n          isSuccess: false,\n          title: \"Error\",\n          message: \"No lograste encontrar la salida\"\n        });\n      }\n    } else if (newPath.length === 3 && newPath[2] === 'green') {\n      setCurrentScenario(successScenario);\n    } else {\n      setCurrentScenario(errorScenarios.wrongPath);\n    }\n  };\n\n  const resetGame = () => {\n    setCurrentScenario(initialScenario);\n    setPath([]);\n  };\n\n  if (currentScenario.isSuccess !== undefined) {\n    return <OutcomeScreen {...currentScenario} />;\n  }\n\n  return (\n    <RoomLayout\n      title={currentScenario.title}\n      description={currentScenario.description}\n      doors={currentScenario.doors}\n      onSelectDoor={handleSelectDoor}\n    />\n  );\n};\n\nexport default App;\n\n// DONE"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}